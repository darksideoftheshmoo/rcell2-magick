% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/definitions_magick.R
\name{magickCell}
\alias{magickCell}
\title{Funcion copada para mostrar fotos de Cell-ID basada en magick}
\usage{
magickCell(
  cdata,
  paths,
  max_composite_size = 1000,
  cell_resize = NULL,
  boxSize = 80,
  n.cells = 25,
  equalize_images = F,
  normalize_images = F,
  customize_images = F,
  image_customize = NULL,
  ch = "BF.out",
  sortVar = NULL,
  seed = NULL,
  .debug = FALSE,
  return_single_imgs = FALSE,
  return_ucid_df = FALSE,
  annotation_params = list(color = "white", background = "black"),
  add_border = TRUE,
  stack_vertical_first = FALSE,
  return_raw = FALSE,
  crop_images = TRUE,
  fill_cdata = FALSE,
  highlight_fames = FALSE
)
}
\arguments{
\item{cdata}{A "cdata" data.frame with the Cell-ID variables (not the cell.data object, \code{cell.data$data}). It can be obtained from \code{get_cell_data} or \code{load_cell_data}.}

\item{paths}{A "paths" data.frame, with paths to the images (i.e. \code{cell.data$images}), and t.frame, position and channel information of each one. It can be obtained from \code{get_cell_data} or \code{load_cell_data}.}

\item{max_composite_size}{Maximum size of the final composite image (this resize is applied last) in pixels. 1000 by default.}

\item{cell_resize}{Resize string for the individual cell images (\code{NULL} translates to \code{boxSize}x\code{boxSize} by default).}

\item{boxSize}{Lateral size of the square box extracted from the original images (in pixels). 50 px by default.}

\item{n.cells}{Maximum number of cells to display (integer, set to \code{NULL} to display all cells in \code{cdata}).}

\item{equalize_images}{Use magick's function to "equalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}

\item{normalize_images}{Use magick's function to "normalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}

\item{customize_images}{Use a custom magick-like function to "customize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}

\item{image_customize}{A custom magick-like function to "customize" the channels specified in \code{customize_images}. Defaults to NULL (disabled).}

\item{ch}{Name of the CellID channel (BF, BF.out, RFP, etc.). "BF.out" by default, use a vector to select more than one channel simultaneously (images will be stacked).}

\item{sortVar}{Variable name used to sort the rows (after sampling if a \code{seed} was specified). NULL by default, to skip sorting.}

\item{seed}{Seed value for sampling of cell images. NULL by default, to disable sampling.}

\item{.debug}{Print more messages if TRUE.}

\item{return_single_imgs}{If TRUE, return a vector of images instead of a tile.}

\item{return_ucid_df}{If TRUE, return is a list of magick images and ucid dataframes.}

\item{annotation_params}{Set to NULL to skip annotations, or a named list with values of length one for magick::annotate options (i.e. one or more of the names "color" "background" "size"). Note that size close to zero can be invisible.}

\item{add_border}{Add a 1x1 border to the pictures. Useful for stacking/appending.}

\item{stack_vertical_first}{Set to TRUE to stack images vertically first (useful when \code{return_single_imgs = T}).}

\item{return_raw}{Returns loaded images prematurely (i.e. without any processing other than magick::image_read and magick::image_crop).}

\item{crop_images}{Whether to crop images to a box centered on the cell's XY position (TRUE, default), or the full image (FALSE).}

\item{fill_cdata}{If TRUE, the time frames in the paths dataframe will be used to generate missing frames in cdata for a given ucid. It is meant to be used with cdata containing one unique ucid.}

\item{highlight_fames}{Pass an array of t.frames, and the cells with matching frames will be highlighted with a yellow border yellow. This overrides other highlights.}
}
\value{
A list of two elements: the magick image and the ucids in the image.
}
\description{
El uso más básico es \code{magickCell(cdata=cell.data$data, paths=cell.data$images)}.

Para mostrar algunas celulas en particular, solo hay que pasarle un \code{cdata} filtrado.

Ver la descripción de argumentos más abajo para aprender sobre las opciones.

Al fondo, en los detalles, hay una descripción de como debería ser el \code{paths} dataframe.
}
\details{
Paths dataframe structure. Output example from \code{glimpse(paths)}:

\preformatted{Columns: 6
$ pos     <int> 1
$ t.frame <int> 0
$ channel <chr> "YFP"
$ image   <chr> "picture_filename.tif"
$ path    <chr> "/path/to/directory/with/pictures/"
$ file    <chr> "/path/to/directory/with/pictures/picture_filename.tif"
$ is.out  <lgl> FALSE
}
}
