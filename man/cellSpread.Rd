% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/definitions_magick.R
\name{cellSpread}
\alias{cellSpread}
\title{2D binning of data and tiling of cell pictures}
\usage{
cellSpread(
  cdata,
  paths,
  ch = "BF.out",
  boxSize = 80,
  xvar = "a.tot",
  yvar = "fft.stat",
  x.cuts = 7,
  y.cuts = 7,
  for_plotting = T,
  cut.by.content = F,
  ...
)
}
\arguments{
\item{cdata}{A "cdata" data.frame with the CellID variables (not the cell.data object, \code{cell.data$data}). It can be obtained from \code{cell.load.alt} or \code{load_cell_data}.}

\item{paths}{A "paths" data.frame, with paths to the images (i.e. \code{cell.data$images}), and t.frame, position and channel information of each one. It can be obtained from \code{cell.load.alt} or \code{load_cell_data}.}

\item{ch}{Name of the CellID channel (BF, BF.out, RFP, etc.). "BF.out" by default, use a vector to select more than one channel simultaneously (images will be stacked).}

\item{boxSize}{Lateral size of the square box extracted from the original images (in pixels). 50 px by default.}

\item{xvar, yvar}{Strings indicating names for the variables to plot in the horizontal (x) and vertical (y) axis.}

\item{x.cuts, y.cuts}{Integers indicating the number of cuts for each variable.}

\item{for_plotting}{Return value changes to list of elements important for plotting.}

\item{cut.by.content}{Use quantile to generate cuts of "roughly equal content (rather than length)."}

\item{...}{
  Arguments passed on to \code{\link[=magickCell]{magickCell}}
  \describe{
    \item{\code{max_composite_size}}{Maximum size of the final composite image (this resize is applied last) in pixels. 1000 by default.}
    \item{\code{cell_resize}}{Resize string for the individual cell images (\code{NULL} translates to \code{boxSize}x\code{boxSize} by default).}
    \item{\code{n.cells}}{Maximum number of cells to display (integer, set to \code{NULL} to display all cells in \code{cdata}).}
    \item{\code{equalize_images}}{Use magick's function to "equalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{normalize_images}}{Use magick's function to "normalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{customize_images}}{Use a custom magick-like function to "customize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{image_customize}}{A custom magick-like function to "customize" the channels specified in \code{customize_images}. Defaults to NULL (disabled).}
    \item{\code{sortVar}}{Variable name used to sort the rows (after sampling if a \code{seed} was specified). NULL by default, to skip sorting.}
    \item{\code{seed}}{Seed value for sampling of cell images. NULL by default, to disable sampling.}
    \item{\code{.debug}}{Print more messages if TRUE.}
    \item{\code{return_single_imgs}}{If TRUE, return a vector of images instead of a tile.}
    \item{\code{return_ucid_df}}{If TRUE, return is a list of magick images and ucid dataframes.}
    \item{\code{annotation_params}}{Set to NULL to skip annotations, or a named list with values of length one for magick::annotate options (i.e. one or more of the names "color" "background" "size"). Note that size close to zero can be invisible.}
    \item{\code{add_border}}{Add a 1x1 border to the pictures. Useful for stacking/appending.}
    \item{\code{stack_vertical_first}}{Set to TRUE to stack images vertically first (useful when \code{return_single_imgs = T}).}
    \item{\code{return_raw}}{Returns loaded images prematurely (i.e. without any processing other than magick::image_read and magick::image_crop).}
    \item{\code{crop_images}}{Whether to crop images to a box centered on the cell's XY position (TRUE, default), or the full image (FALSE).}
    \item{\code{fill_cdata}}{If TRUE, the time frames in the paths dataframe will be used to generate missing frames in cdata for a given ucid. It is meant to be used with cdata containing one unique ucid.}
  }}
}
\description{
2D binning of data and tiling of cell pictures
}
